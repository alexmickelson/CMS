@model IEnumerable<User>
@inject CMS.Data.CMSContext _context;
@using Microsoft.AspNetCore.Authorization
@using CMS.Services
@inject IAuthorizationService Authorization
@{
    var canEdit = (await Authorization.AuthorizeAsync(User, MyIdentityDataService.BlogPolicy_Edit)).Succeeded;
    var canDelete = (await Authorization.AuthorizeAsync(User, MyIdentityDataService.BlogPolicy_Delete)).Succeeded;
    var canAdd = (await Authorization.AuthorizeAsync(User, MyIdentityDataService.BlogPolicy_Add)).Succeeded;
}
@{
    ViewData["Title"] = "GetUserLists";
}
@if (canAdd && canEdit)
{
    <h1>Users:</h1>

    @foreach (var user in Model)
    {
        <div class="container">
            <div class="userList">
                @if (user.Email == "admin@snow.edu")
                {
                <div style="padding:10px;">
                    <img src="~/img/user_icon.png" height="30px" width="35px" />&nbsp;&nbsp; @Html.DisplayFor(M => user.Email) 
                </div>
                }
                    else
                    {
                    <div style="padding:10px;">
                        <img src="~/img/user_icon.png" height="30px" width="35px" />&nbsp;&nbsp; @Html.DisplayFor(M => user.Email)
                    </div>
                }
                @if (user.Email == "admin@snow.edu")
                {
                }
                else
                {
                    <div class="floaty">
                        <a class="demoteButton" asp-action="BlockUserFromSite" asp-route-user="@user.Email">BLOCK THIS USER</a>
                        <a class="elevateButton" asp-action="UpgradeToAdmin" asp-route-user="@user.Email">ELEVATE THIS USER</a>
                    </div>
                }

            </div>
        </div>


    }
}
else
{
    <h1 style="color: red">Access Denied</h1>
    <h3>You need admin privileges to access this end.</h3>
}


